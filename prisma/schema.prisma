// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  user    User     @relation(fields: [userId], references: [id])
  userId  Int
  likes Like[] 
  comments Comment[]
   @@map("posts")
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post    Post     @relation(fields: [postId], references: [id])
  postId  Int
  user    User     @relation(fields: [userId], references: [id])
  userId Int 
   @@map("likes")
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comment String
  post    Post     @relation(fields: [postId], references: [id])
  postId  Int
  user    User     @relation(fields: [userId], references: [id])
  userId Int 
   @@map("comments")
}
model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
   @@map("profiles")
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  password String
  posts   Post[]
  likes Like[]
  comments Comment[]
  followings Following[]
  followers Follower[] 
  profile Profile?

  @@map("users")
}


model Follower {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followerId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  @@map("followers")
}

model Following {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followingId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  @@map("followings")
}